import React, { useState } from "react";
import { useRouter } from "next/router";
import FormData from "form-data";
import axios from "axios";
import cookie from "js-cookie";
import Head from "next/head";
import LoginregisterLayout from "../../layout/loginregisterLayout";
import InputBox from "../../components/inputBox";
import CategoryCard from "../../components/categoryCard";
import Link from "next/link";
import { ToastContainer, toast } from "react-toastify";

export default function Login() {
  const router = useRouter();
  const API = process.env.NEXT_PUBLIC_API_ENDPOINT;
  const [userData, setUserData] = useState({
    user_name: "",
    user_email: "",
    user_password: "",
    role_id: "",
  });

  const notify = (title) =>
  toast.error(title, {
    position: "top-center",
    autoClose: 2500,
    hideProgressBar: false,
    closeOnClick: true,
    pauseOnHover: true,
    draggable: true,
    progress: undefined,
  });

  const [warningPwd, setWarningPwd] = useState("");
  const [passwordType, setPasswordType] = useState("password");
  const viewPassword = () => {
    if(passwordType == "password"){
      setPasswordType("text")
    }else{
      setPasswordType("password")
    }
  }

  const checkCombinationPassword = (pwd) => {
    var strongRegex = new RegExp("^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\$%\^&\*_])(?=.{8,})");
    var notLowerCaseRegex = new RegExp("^(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\$%\^&\*_])(?=.{8,})");
    var notUpperCaseRegex = new RegExp("^(?=.*[a-z])(?=.*[0-9])(?=.*[!@#\$%\^&\*_])(?=.{8,})");
    var notNumberRegex = new RegExp("^(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#\$%\^&\*_])(?=.{8,})");
    var notCharacterRegex = new RegExp("^(?=.*[a-z])(?=.*[A-Z])(?=.{8,})");
    var notEightPwdRegex = new RegExp("^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\$%\^&\*_])");
    
    if(strongRegex.test(pwd)){
      setWarningPwd("")
      return true
    }
    else if (notLowerCaseRegex.test(pwd)){
      setWarningPwd("Minimal 1 huruf besar")
    }else if(notUpperCaseRegex.test(pwd)){
      setWarningPwd("Minimal 1 huruf kecil")
    }else if(notNumberRegex.test(pwd)){
      setWarningPwd("Minimal 1 Angka")
    }else if(notCharacterRegex.test(pwd)){
      setWarningPwd("Gunakan !@#\$%\^&\*_")
    }else if(notEightPwdRegex.test(pwd)){
      setWarningPwd("Minimal 8 Password")
    }else{
      setWarningPwd(" min 8 password, 1 angka, !@#\$%\^&\*_ , min 1 huruf besar dan kecil")
    }
  }

  const handleSubmit = async (e) => {
    e.preventDefault();
    const check = checkCombinationPassword(userData.user_password)

    if(check == true 
      && userData.user_email != ""
      && userData.user_name != ""      
      && userData.role_id != ""
      ){
      
      const data = new FormData();
      data.append("user_email", userData.user_email);
      data.append("user_password", userData.user_password);
      data.append("user_name", userData.user_name);
      data.append("role_id", Number(userData.role_id));
      try {
        await axios({
          method: "post",
          url: `${API}/users`,
          data: data,
          headers: {
            "Content-Type": `multipart/form-data`,
          },
        });

        const res = await axios({
          method: "post",
          url: `${API}/users/login`,
          data: data,
          headers: {
            "Content-Type": `multipart/form-data`,
          },
        });
        cookie.set("token", res.data.token)
        router.replace("/");
      } catch (error) {
        console.log(error.response);
      }
    }else if(
    userData.user_email == ""
    || userData.user_name == ""      
    || userData.role_id == ""
    || userData.user_password == ""){
      notify("Isi lengkap semua data")
    }

  };

  const handleChange = (e) => {
    const { name, value } = e.target;
    setUserData({ ...userData, [name]: value });
  };

  return (
    <>
      <Head>
        <title>Register</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <LoginregisterLayout>
        <h3 className="fw-bold mb-3 pb-3" style={{ letterSpacing: "1px" }}>
          Daftar
        </h3>
        <form onSubmit={handleSubmit} style={{ maxWidth: "600px" }}>
          <div className="col-12 mt-2">
            <label>Nama*</label>
            <InputBox
              type="text"
              name="user_name"
              className="form-control mt-2"
              placeholder="Nama Lengkap"
              onChange={(e) => handleChange(e)}
            />
          </div>

          <div className="col-12 mt-2">
            <label>Email*</label>
            <InputBox
              type="email"
              name="user_email"
              className="form-control mt-2"
              placeholder="Contoh: johndee@gmail.com"
              onChange={(e) => handleChange(e)}
            />
          </div>

          <div className="col-12 mt-2">
            <label>Password*</label>
            <span style={{color:"red"}}> {warningPwd}</span>
            <InputBox
              type={passwordType}
              name="user_password"
              placeholder="Masukkan password"
              className="form-control mt-2 mb-2"
              onChange={(e) => handleChange(e)}
            />
            <input id="viewPassword" type="checkbox" onClick={viewPassword} className="mb-2 ms-3 me-2"/><label for="" >Show Password</label>
          </div>

          <div className="col-12 mt-2">
            <label>Role*</label>
            <select
              name="role_id"
              className="form-select mt-2"
              aria-label="Default select example"
              onChange={(e) => handleChange(e)}
              style={{
                padding: "12px 16px",
                border: "1px solid #D0D0D0",
                borderRadius: "16px",
                display: "flex",
              }}
            >
              <option value="">Pilih Role</option>
              <option value="2">Pasar</option>
              <option value="1">Petani</option>
            </select>
          </div>

          <div className="mt-4 mb-4 text-center fw-bold">
            <div className="start-0 end-0 d-flex">
              <CategoryCard
                type="submit"
                className="p-3 flex-grow-1"
                text="Daftar"
                rad="16"
              />
            </div>
          </div>
        </form>
        <h5 className="d-flex justify-content-center">
          Sudah punya akun?&nbsp;
          <Link href={"/account/login"}>
            <a style={{ color: "var(--purple)", textDecoration: "none" }}>
              Masuk disini
            </a>
          </Link>
        </h5>

        <ToastContainer
          position="top-center"
          autoClose={5000}
          hideProgressBar={false}
          newestOnTop={false}
          closeOnClick
          rtl={false}
          toastStyle={{backgroundColor: "#7126B5", color: "white"}}
          pauseOnFocusLoss
          draggable
          pauseOnHover
        />
      </LoginregisterLayout>
    </>
  );
}
